#!/bin/sh

fail()
{
	echo FAILED "($SCRIPT)" 1>&2
	cat _out
	exit 1
}


try()
{
	echo -n "$1: " 1>&2
	shift
	#
	# This apparently redundant re-assigninment of CFG_SLOTx_SERIAL and
	# CFG_x_SWITCH_LAST ensures they're in the environment of "coord".
	# Else, since the original assignment is when calling the "try"
	# function, they would not be exported all that way.
	#
	CFG_SLOT0_SERIAL=$CFG_SLOT0_SERIAL \
	    CFG_SLOT1_SERIAL=$CFG_SLOT1_SERIAL \
	    CFG_SWITCH_LAST=$CFG_SWITCH_LAST \
	    CFG_SLOT0_SWITCH_LAST=$CFG_SLOT0_SWITCH_LAST \
	    CFG_SLOT1_SWITCH_LAST=$CFG_SLOT1_SWITCH_LAST \
	    $DIR/coord -t "$@" >_out 2>&1 || fail
}


expect()
{
	diff -u "$@" - _out >_diff || {
		echo FAILED "($SCRIPT)" 1>&2
		cat _diff
		rm -f _out _diff
		exit 1
	}
	echo PASSED 1>&2
	rm -f _out _diff _test
	passed=`expr ${passed:-0} + 1`
}


temp()
{
	local base=$1
	local i n
	local s=

	shift
	i=0
	while [ $i -lt 64 ]; do
		local t=$base

		for n in "$@"; do
			if [ $i = ${n%:*} ]; then
				t=${n#*:}
				break
			fi
		done
		[ "$s" ] && s="$s "
		s="$s$t"
		i=`expr $i + 1`
	done
	echo "$s"
}


#
# Getting to green is a little tricky. This convenience variable helps.
#
GREEN="/mine/pool/statistics:C:0 J:0 A:0 R:0 S:0"
GREEN="$GREEN;/mine/pool/statistics:C:0 J:1 A:1 R:0 S:0"


: ${DIR:=..}
